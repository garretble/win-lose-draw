{"version":3,"sources":["components/Button.jsx","App.js","serviceWorker.js","index.js","words.js"],"names":["Button","props","react_default","a","createElement","onClick","disabled","type","className","class","text","startingState","currentWord","wordSelected","ready","currentTime","currentlyRunning","gameOver","difficulty","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getNewWord","state","words","wordList","setState","Math","floor","random","length","setReady","setDifficulty","e","currentTarget","value","startTimer","timerID","setInterval","tick","stopTimer","clearInterval","reset","prevState","prevProps","components_Button","id","name","checked","onChange","for","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","then","registration","unregister","module","exports","easy","medium","hard"],"mappings":"yNAeeA,SAbA,SAAAC,GACb,OACEC,EAAAC,EAAAC,cAAA,UACEC,QAASJ,EAAMI,QACfC,SAAUL,EAAMK,SAChBC,KAAMN,EAAMM,MAAQ,SACpBC,UAAWP,EAAMQ,OAEhBR,EAAMS,wBCJPC,EAAgB,CACpBC,YAAa,qBACbC,cAAc,EACdC,OAAO,EACPC,YAAa,GACbC,kBAAkB,EAClBC,UAAU,EACVC,WAAY,QA+LCC,cA3Lb,SAAAA,EAAYlB,GAAO,IAAAmB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACjBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMtB,KAIR0B,WAAa,WACX,IAAIP,EAAKQ,MAAMZ,iBAAf,CAIA,IAAMa,EAAQC,IAASV,EAAKQ,MAAMV,YAElCE,EAAKW,SAAS,CACZnB,YAAaiB,EAAMG,KAAKC,MAAMD,KAAKE,SAAWL,EAAMM,SACpDtB,cAAc,MAdCO,EAkBnBgB,SAAW,WACThB,EAAKW,SAAS,CACZjB,OAAO,KApBQM,EAwBnBiB,cAAgB,SAAAC,GACdlB,EAAKW,SACH,CACEb,WAAYoB,EAAEC,cAAcC,OAE9B,kBAAMpB,EAAKO,gBA7BIP,EAiCnBqB,WAAa,WACXrB,EAAKW,SAAS,CACZf,kBAAkB,IAEpBI,EAAKsB,QAAUC,YAAY,kBAAMvB,EAAKwB,QAAQ,MArC7BxB,EAwCnByB,UAAY,WACVC,cAAc1B,EAAKsB,SACnBtB,EAAKW,SAASpB,IA1CGS,EA6CnB2B,MAAQ,WACN3B,EAAKW,SAASpB,IA9CGS,EAiDnBwB,KAAO,WACLxB,EAAKW,SAAS,SAACiB,EAAWC,GAAZ,MAA2B,CACvClC,YAAaiC,EAAUjC,YAAc,KAGR,IAA3BK,EAAKQ,MAAMb,cACbK,EAAKyB,YACLzB,EAAKW,SAAS,CACZd,UAAU,MAvDdG,EAAKQ,MAAQjB,EAFIS,wEA+DjB,OACElB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAAA,UAAQI,UAAU,cAChBN,EAAAC,EAAAC,cAAA,kCAEFF,EAAAC,EAAAC,cAAA,QAAMI,UAAU,wBACbe,KAAKK,MAAMX,UACVf,EAAAC,EAAAC,cAAA,OAAKI,UAAU,8BACbN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAC8C,EAAD,CACE7C,QAASkB,KAAKwB,MACdrC,KAAK,WACLD,MAAM,kBAKbc,KAAKK,MAAMd,MACVZ,EAAAC,EAAAC,cAAA,WAASI,UAAU,eACjBN,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SAASe,KAAKK,MAAMb,aAClCQ,KAAKK,MAAMZ,iBACVd,EAAAC,EAAAC,cAAC8C,EAAD,CACE7C,QAASkB,KAAKsB,UACdnC,KAAK,OACLD,MAAM,eAGRP,EAAAC,EAAAC,cAAC8C,EAAD,CACE7C,QAASkB,KAAKkB,WACd/B,KAAK,QACLD,MAAM,iBAKZP,EAAAC,EAAAC,cAAA,WAASI,UAAU,cACjBN,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,gBACbN,EAAAC,EAAAC,cAAA,SACEG,KAAK,QACL4C,GAAG,oBACHC,KAAK,aACLZ,MAAM,OACNa,QAAmC,SAA1B9B,KAAKK,MAAMV,WACpBoC,SAAU/B,KAAKc,gBAEjBnC,EAAAC,EAAAC,cAAA,SACEmD,IAAI,oBACJ/C,UAC4B,SAA1Be,KAAKK,MAAMV,WACP,WACA,iBALR,SAWFhB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,gBACbN,EAAAC,EAAAC,cAAA,SACEG,KAAK,QACL4C,GAAG,oBACHC,KAAK,aACLZ,MAAM,SACNa,QAAmC,WAA1B9B,KAAKK,MAAMV,WACpBoC,SAAU/B,KAAKc,gBAEjBnC,EAAAC,EAAAC,cAAA,SACEmD,IAAI,oBACJ/C,UAC4B,WAA1Be,KAAKK,MAAMV,WACP,WACA,iBALR,WAWFhB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,gBACbN,EAAAC,EAAAC,cAAA,SACEG,KAAK,QACL4C,GAAG,oBACHC,KAAK,aACLZ,MAAM,OACNa,QAAmC,SAA1B9B,KAAKK,MAAMV,WACpBoC,SAAU/B,KAAKc,gBAEjBnC,EAAAC,EAAAC,cAAA,SACEmD,IAAI,oBACJ/C,UAC4B,SAA1Be,KAAKK,MAAMV,WACP,WACA,iBALR,UAaJhB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,gBAAgBe,KAAKK,MAAMhB,aAC1CV,EAAAC,EAAAC,cAAC8C,EAAD,CACE7C,QAASkB,KAAKI,WACdjB,KAAK,aACLD,MAAM,gBAERP,EAAAC,EAAAC,cAAA,OAAKI,UAAU,eACbN,EAAAC,EAAAC,cAAC8C,EAAD,CACE7C,QAASkB,KAAKa,SACd1B,KAAK,mBACLD,MAAM,cACNH,UAAWiB,KAAKK,MAAMf,0BAjLtB2C,aCJEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7D,EAAAC,EAAAC,cAAC4D,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAActD,MAAMuD,KAAK,SAAAC,GACjCA,EAAaC,gCE2CnBC,EAAOC,QA9KU,CACfC,KAAM,CACJ,QACA,UACA,QACA,QACA,YACA,UACA,OACA,SACA,UACA,QACA,gBACA,UACA,QACA,UACA,cACA,SACA,UACA,YACA,OACA,YACA,SACA,SACA,iBACA,WACA,aACA,QACA,aACA,YACA,WACA,MACA,SACA,OACA,OACA,MACA,OACA,QACA,SACA,UACA,aACA,SACA,QACA,aACA,UACA,OACA,QACA,MACA,WACA,aACA,eACA,SACA,qBAEFC,OAAQ,CACN,kBACA,QACA,cACA,SACA,MACA,eACA,SACA,YACA,cACA,WACA,OACA,SACA,WACA,MACA,eACA,OACA,YACA,OACA,SACA,OACA,WACA,UACA,WACA,SACA,YACA,UACA,UACA,iBACA,QACA,aACA,QACA,MACA,WACA,QACA,WACA,aACA,cACA,WACA,QACA,cACA,UACA,WACA,YACA,oBACA,UACA,SACA,YACA,QACA,WACA,OACA,aACA,QACA,SACA,YACA,gBAEFC,KAAM,CACJ,QACA,YACA,WACA,aACA,WACA,UACA,UACA,aACA,OACA,cACA,QACA,YACA,WACA,OACA,QACA,YACA,OACA,OACA,YACA,SACA,QACA,YACA,QACA,aACA,QACA,OACA,WACA,MACA,iBACA,YACA,cACA,QACA,UACA,SACA,eACA,YACA,YACA,iBACA,YACA,OACA,gBACA,QACA,cACA,QACA,UACA,SACA,UACA,gBACA,OACA,SACA,YACA,cACA,gBACA,aACA,gBACA,gBACA,qBACA,+BACA","file":"static/js/main.bb89ff77.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Button = props => {\r\n  return (\r\n    <button\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n      type={props.type || \"button\"}\r\n      className={props.class}\r\n    >\r\n      {props.text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport Button from \"./components/Button\";\nimport wordList from \"./words.js\";\n\nconst startingState = {\n  currentWord: \"No Phrase Selected\",\n  wordSelected: false,\n  ready: false,\n  currentTime: 10,\n  currentlyRunning: false,\n  gameOver: false,\n  difficulty: \"easy\"\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = startingState;\n  }\n\n  getNewWord = () => {\n    if (this.state.currentlyRunning) {\n      return;\n    }\n\n    const words = wordList[this.state.difficulty];\n\n    this.setState({\n      currentWord: words[Math.floor(Math.random() * words.length)],\n      wordSelected: true\n    });\n  };\n\n  setReady = () => {\n    this.setState({\n      ready: true\n    });\n  };\n\n  setDifficulty = e => {\n    this.setState(\n      {\n        difficulty: e.currentTarget.value\n      },\n      () => this.getNewWord()\n    );\n  };\n\n  startTimer = () => {\n    this.setState({\n      currentlyRunning: true\n    });\n    this.timerID = setInterval(() => this.tick(), 1000);\n  };\n\n  stopTimer = () => {\n    clearInterval(this.timerID);\n    this.setState(startingState);\n  };\n\n  reset = () => {\n    this.setState(startingState);\n  };\n\n  tick = () => {\n    this.setState((prevState, prevProps) => ({\n      currentTime: prevState.currentTime - 1\n    }));\n\n    if (this.state.currentTime === 0) {\n      this.stopTimer();\n      this.setState({\n        gameOver: true\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Win, Lose, or Draw!</h1>\n        </header>\n        <main className=\"flex flex-hor-center\">\n          {this.state.gameOver && (\n            <div className=\"game-over flex flex-center\">\n              <div>\n                <h2>Time's Up!</h2>\n                <Button\n                  onClick={this.reset}\n                  text=\"New Game\"\n                  class=\"btn-warning\"\n                />\n              </div>\n            </div>\n          )}\n          {this.state.ready ? (\n            <section className=\"timer-block\">\n              <h2>Start Timer</h2>\n              <div className=\"timer\">{this.state.currentTime}</div>\n              {this.state.currentlyRunning ? (\n                <Button\n                  onClick={this.stopTimer}\n                  text=\"Stop\"\n                  class=\"btn-danger\"\n                />\n              ) : (\n                <Button\n                  onClick={this.startTimer}\n                  text=\"Start\"\n                  class=\"btn-primary\"\n                />\n              )}\n            </section>\n          ) : (\n            <section className=\"word-block\">\n              <h2>Select Phrase</h2>\n              <div className=\"flex flex-center\">\n                <div className=\"radio-button\">\n                  <input\n                    type=\"radio\"\n                    id=\"difficultyChoice1\"\n                    name=\"difficulty\"\n                    value=\"easy\"\n                    checked={this.state.difficulty === \"easy\"}\n                    onChange={this.setDifficulty}\n                  />\n                  <label\n                    for=\"difficultyChoice1\"\n                    className={\n                      this.state.difficulty === \"easy\"\n                        ? \"btn-info\"\n                        : \"btn-secondary\"\n                    }\n                  >\n                    Easy\n                  </label>\n                </div>\n                <div className=\"radio-button\">\n                  <input\n                    type=\"radio\"\n                    id=\"difficultyChoice2\"\n                    name=\"difficulty\"\n                    value=\"medium\"\n                    checked={this.state.difficulty === \"medium\"}\n                    onChange={this.setDifficulty}\n                  />\n                  <label\n                    for=\"difficultyChoice2\"\n                    className={\n                      this.state.difficulty === \"medium\"\n                        ? \"btn-info\"\n                        : \"btn-secondary\"\n                    }\n                  >\n                    Medium\n                  </label>\n                </div>\n                <div className=\"radio-button\">\n                  <input\n                    type=\"radio\"\n                    id=\"difficultyChoice3\"\n                    name=\"difficulty\"\n                    value=\"hard\"\n                    checked={this.state.difficulty === \"hard\"}\n                    onChange={this.setDifficulty}\n                  />\n                  <label\n                    for=\"difficultyChoice3\"\n                    className={\n                      this.state.difficulty === \"hard\"\n                        ? \"btn-info\"\n                        : \"btn-secondary\"\n                    }\n                  >\n                    Hard\n                  </label>\n                </div>\n              </div>\n\n              <div className=\"current-word\">{this.state.currentWord}</div>\n              <Button\n                onClick={this.getNewWord}\n                text=\"New Phrase\"\n                class=\"btn-primary\"\n              />\n              <div className=\"spacing-top\">\n                <Button\n                  onClick={this.setReady}\n                  text=\"Press When Ready\"\n                  class=\"btn-success\"\n                  disabled={!this.state.wordSelected}\n                />\n              </div>\n            </section>\n          )}\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const wordList = {\r\n  easy: [\r\n    \"Angel\",\r\n    \"Eyeball\",\r\n    \"Pizza\",\r\n    \"Angry\",\r\n    \"Fireworks\",\r\n    \"Pumpkin\",\r\n    \"Baby\",\r\n    \"Flower\",\r\n    \"Rainbow\",\r\n    \"Beard\",\r\n    \"Flying saucer\",\r\n    \"Recycle\",\r\n    \"Bible\",\r\n    \"Giraffe\",\r\n    \"Sand castle\",\r\n    \"Bikini\",\r\n    \"Glasses\",\r\n    \"Snowflake\",\r\n    \"Book\",\r\n    \"High heel\",\r\n    \"Stairs\",\r\n    \"Bucket\",\r\n    \"Ice cream cone\",\r\n    \"Starfish\",\r\n    \"Bumble bee\",\r\n    \"Igloo\",\r\n    \"Strawberry\",\r\n    \"Butterfly\",\r\n    \"Lady bug\",\r\n    \"Sun\",\r\n    \"Camera\",\r\n    \"Lamp\",\r\n    \"Tire\",\r\n    \"Cat\",\r\n    \"Lion\",\r\n    \"Toast\",\r\n    \"Church\",\r\n    \"Mailbox\",\r\n    \"Toothbrush\",\r\n    \"Crayon\",\r\n    \"Night\",\r\n    \"Toothpaste\",\r\n    \"Dolphin\",\r\n    \"Nose\",\r\n    \"Truck\",\r\n    \"Egg\",\r\n    \"Olympics\",\r\n    \"Volleyball\",\r\n    \"Eiffel Tower\",\r\n    \"Peanut\",\r\n    \"Mind Your Manners\"\r\n  ],\r\n  medium: [\r\n    \"Abraham Lincoln\",\r\n    \"Brain\",\r\n    \"Bubble bath\",\r\n    \"Buckle\",\r\n    \"Bus\",\r\n    \"Car accident\",\r\n    \"Castle\",\r\n    \"Chain saw\",\r\n    \"Circus tent\",\r\n    \"Computer\",\r\n    \"Crib\",\r\n    \"Dragon\",\r\n    \"Dumbbell\",\r\n    \"Eel\",\r\n    \"Ferris wheel\",\r\n    \"Flag\",\r\n    \"Junk mail\",\r\n    \"Kiss\",\r\n    \"Kitten\",\r\n    \"Kiwi\",\r\n    \"Lipstick\",\r\n    \"Lobster\",\r\n    \"Lollipop\",\r\n    \"Magnet\",\r\n    \"Megaphone\",\r\n    \"Mermaid\",\r\n    \"Minivan\",\r\n    \"Mount Rushmore\",\r\n    \"Music\",\r\n    \"North pole\",\r\n    \"Nurse\",\r\n    \"Owl\",\r\n    \"Pacifier\",\r\n    \"Piano\",\r\n    \"Pigtails\",\r\n    \"Playground\",\r\n    \"Pumpkin pie\",\r\n    \"Raindrop\",\r\n    \"Robot\",\r\n    \"Sand castle\",\r\n    \"Slipper\",\r\n    \"Snowball\",\r\n    \"Sprinkler\",\r\n    \"Statue of Liberty\",\r\n    \"Tadpole\",\r\n    \"Teepee\",\r\n    \"Telescope\",\r\n    \"Train\",\r\n    \"Tricycle\",\r\n    \"Tutu\",\r\n    \"Cold Water\",\r\n    \"Bacon\",\r\n    \"Hawaii\",\r\n    \"Half Moon\",\r\n    \"Harry Potter\"\r\n  ],\r\n  hard: [\r\n    \"Attic\",\r\n    \"Back seat\",\r\n    \"Birthday\",\r\n    \"Black hole\",\r\n    \"Blizzard\",\r\n    \"Burrito\",\r\n    \"Captain\",\r\n    \"Chandelier\",\r\n    \"Crib\",\r\n    \"Cruise ship\",\r\n    \"Dance\",\r\n    \"Deodorant\",\r\n    \"Facebook\",\r\n    \"Flat\",\r\n    \"Frame\",\r\n    \"Full moon\",\r\n    \"Game\",\r\n    \"Glue\",\r\n    \"Highchair\",\r\n    \"Hockey\",\r\n    \"Hotel\",\r\n    \"Jump rope\",\r\n    \"Koala\",\r\n    \"Leprechaun\",\r\n    \"Light\",\r\n    \"Mask\",\r\n    \"Mechanic\",\r\n    \"Mom\",\r\n    \"Mr Potato Head\",\r\n    \"Pantyhose\",\r\n    \"Paper plate\",\r\n    \"Photo\",\r\n    \"Pilgram\",\r\n    \"Pirate\",\r\n    \"Pocket watch\",\r\n    \"Rock band\",\r\n    \"Sasquatch\",\r\n    \"Scrambled eggs\",\r\n    \"Seat belt\",\r\n    \"Skip\",\r\n    \"Solar eclipse\",\r\n    \"Space\",\r\n    \"Stethoscope\",\r\n    \"Stork\",\r\n    \"Sunburn\",\r\n    \"Thread\",\r\n    \"Tourist\",\r\n    \"United States\",\r\n    \"WIFI\",\r\n    \"Zombie\",\r\n    \"Hopscotch\",\r\n    \"Candy Crush\",\r\n    \"Where's Waldo\",\r\n    \"Blue Jeans\",\r\n    \"Humpty Dumpty\",\r\n    \"Puss-in-Boots\",\r\n    \"The Little Mermaid\",\r\n    \"Teenage Mutant Ninja Turtles\",\r\n    \"Strawberry Milkshake\"\r\n  ]\r\n};\r\n\r\nmodule.exports = wordList;\r\n"],"sourceRoot":""}